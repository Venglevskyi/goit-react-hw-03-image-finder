{"version":3,"sources":["styles.module.css","Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Button/Button.js","Components/Loader/Loader.js","Components/Modal/Modal.js","services/imageApi.js","App.js","index.js"],"names":["module","exports","Searchbar","state","inputValue","handleChange","target","setState","value","handleSubmit","e","preventDefault","props","onSubmit","className","styles","SearchForm","this","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","webformatURL","tags","largeImage","src","alt","ImageGalleryItemImage","onClick","ImageGallery","images","onLargeImage","map","id","largeImageURL","key","Button","clickButton","Spiner","color","height","width","Modal","handleKeyDown","code","onCloseModal","window","addEventListener","removeEventListener","Overlay","children","baseUrl","fetchImages","searchQuery","page","options","method","headers","Accept","requestParameter","fetch","then","response","json","data","hits","App","loading","error","largeImg","fetchImagesByQuery","catch","finally","handleSearchFormSubmit","query","scroller","scrollTo","top","document","documentElement","scrollHeight","behavior","setLargeImage","url","closeModal","prevProps","prevState","prevQuery","nextQuery","prevImage","nextImage","length","massage","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.9f952705.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"styles_App__3ldqN\",\"Searchbar\":\"styles_Searchbar__3XEkA\",\"SearchForm\":\"styles_SearchForm__1NCjQ\",\"SearchFormButton\":\"styles_SearchFormButton__2hJCm\",\"SearchFormButtonLabel\":\"styles_SearchFormButtonLabel__2v2F8\",\"SearchFormInput\":\"styles_SearchFormInput__20QCE\",\"ImageGallery\":\"styles_ImageGallery__3rEiQ\",\"ImageGalleryItem\":\"styles_ImageGalleryItem__3lkxC\",\"ImageGalleryItemImage\":\"styles_ImageGalleryItemImage__2wmJz\",\"Overlay\":\"styles_Overlay__3sm4j\",\"Modal\":\"styles_Modal__1Ir_o\",\"Button\":\"styles_Button__2wsD1\",\"Spiner\":\"styles_Spiner__2szVr\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"../../styles.module.css\";\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    inputValue: \" \",\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({ inputValue: target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.inputValue);\r\n    this.setState({ inputValue: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className={styles.Searchbar}>\r\n        <form className={styles.SearchForm} onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className={styles.SearchFormButton}>\r\n            <span className={styles.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={styles.SearchFormInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.inputValue}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"../../styles.module.css\";\r\n\r\nconst ImageGalleryItem = ({ webformatURL, tags, largeImage }) => (\r\n  <li className={styles.ImageGalleryItem}>\r\n    <img src={webformatURL} alt={tags} className={styles.ImageGalleryItemImage} onClick={largeImage}/>\r\n  </li>\r\n);\r\n\r\nImageGalleryItem.propTypes = {\r\n    webformatURL: PropTypes.string.isRequired,\r\n    tags: PropTypes.string.isRequired,\r\n    largeImage: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\n\r\nimport styles from \"../../styles.module.css\";\r\n\r\nconst ImageGallery = ({ images, onLargeImage }) => (\r\n  <ul className={styles.ImageGallery}>\r\n    {images.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n      <ImageGalleryItem\r\n        key={id}\r\n        webformatURL={webformatURL}\r\n        tags={tags}\r\n        largeImage={() => onLargeImage(largeImageURL)}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      webformatURL: PropTypes.string.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired\r\n    })\r\n  ),\r\n  onLargeImage: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"../../styles.module.css\";\r\n\r\nconst Button = ({clickButton}) => (\r\n    <button type=\"button\" className={styles.Button} onClick={clickButton}>Load more</button>\r\n)\r\n\r\nButton.propTypes = {\r\n    clickButton: PropTypes.func.isRequired\r\n  };\r\n\r\nexport default Button;","import React from \"react\";\r\n\r\nimport styles from \"../../styles.module.css\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst Spiner = () => (\r\n  <div className={styles.Spiner}>\r\n    <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\r\n  </div>\r\n);\r\n\r\nexport default Spiner;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"../../styles.module.css\";\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onCloseModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.Overlay}>\r\n        <div className={styles.Modal}>{this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onCloseModal: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\n","const baseUrl = \"https://pixabay.com/api/\";\r\n\r\nconst fetchImages = (searchQuery, page = 1) => {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\"\r\n    }\r\n  };\r\n  const requestParameter = `?q=${searchQuery}&page=${page}&key=14591029-b9abf563857b66fab696140db&image_type=photo&orientation=horizontal&per_page=12`;\r\n\r\n  return fetch(baseUrl + requestParameter, { options }).then(response =>\r\n    response.json().then(data => data.hits)\r\n  );\r\n};\r\n\r\nexport { fetchImages };\r\n","import React, { Component } from \"react\";\r\n\r\nimport Searchbar from \"./Components/Searchbar/Searchbar\";\r\nimport ImageGallery from \"./Components/ImageGallery/ImageGallery\";\r\nimport Button from \"./Components/Button/Button\";\r\nimport Spiner from \"./Components/Loader/Loader\";\r\nimport Modal from \"./Components/Modal/Modal\";\r\n\r\nimport { fetchImages } from \"./services/imageApi\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    images: [],\r\n    loading: false,\r\n    error: null,\r\n    largeImg: null,\r\n    searchQuery: \" \",\r\n    page: 1\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevQuery = prevState.searchQuery;\r\n    const nextQuery = this.state.searchQuery;\r\n\r\n    const prevImage = prevState.images;\r\n    const nextImage = this.state.images;\r\n\r\n    if (prevQuery !== nextQuery) {\r\n      this.fetchImagesByQuery();\r\n    }\r\n    if (prevImage !== nextImage && prevImage.length !== 0) {\r\n      this.scroller();\r\n    }\r\n  }\r\n\r\n  fetchImagesByQuery = () => {\r\n    const { searchQuery, page } = this.state;\r\n\r\n    this.setState({ loading: true });\r\n\r\n    fetchImages(searchQuery, page)\r\n      .then(images =>\r\n        this.setState(state => ({\r\n          images: [...state.images, ...images],\r\n          page: state.page + 1\r\n        }))\r\n      )\r\n      .catch(error => this.setState({ error }))\r\n      .finally(() => this.setState({ loading: false }));\r\n  };\r\n\r\n  handleSearchFormSubmit = query => {\r\n    this.setState({ searchQuery: query, page: 1, images: [] });\r\n  };\r\n\r\n  scroller = () => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: \"smooth\"\r\n    });\r\n  };\r\n\r\n  setLargeImage = url => {\r\n    this.setState({ largeImg: url });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ largeImg: null });\r\n  };\r\n\r\n  render() {\r\n    const { images, loading, error, largeImg } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={this.handleSearchFormSubmit} />\r\n        {error && <p>Whoops, something went wrong: {error.massage}</p>}\r\n        {images.length > 0 && (\r\n          <ImageGallery images={images} onLargeImage={this.setLargeImage} />\r\n        )}\r\n        {loading && <Spiner />}\r\n        {images.length > 0 && !loading && (\r\n          <Button clickButton={this.fetchImagesByQuery} />\r\n        )}\r\n        {largeImg && (\r\n          <Modal onCloseModal={this.closeModal}>\r\n            <img src={largeImg} alt=\"\" />\r\n          </Modal>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}